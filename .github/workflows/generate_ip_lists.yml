name: Generate IP Lists

on:
  repository_dispatch:
    types: [generate_ip]

jobs:
  generate-lists:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - name: Check if already generated recently
        id: check_generated
        run: |
          COUNTRY="${{ github.event.client_payload.country }}"
          
          # 检查元数据文件是否存在
          METADATA_FILE="ip-lists/${COUNTRY}_metadata.json"
          if [ -f "$METADATA_FILE" ]; then
            # 获取上次生成日期和时间
            LAST_GENERATED=$(grep -o '"generated_at":"[^"]*"' "$METADATA_FILE" | cut -d'"' -f4)
            
            # 计算上次生成时间到现在的小时数
            LAST_TIMESTAMP=$(date -d "$LAST_GENERATED" +%s)
            CURRENT_TIMESTAMP=$(date +%s)
            HOURS_DIFF=$(( (CURRENT_TIMESTAMP - LAST_TIMESTAMP) / 3600 ))
            
            if [ $HOURS_DIFF -lt 24 ]; then
              echo "已经在最近24小时内生成过 $COUNTRY 的 IP 列表，上次生成时间: $LAST_GENERATED"
              echo "skip=true" >> $GITHUB_OUTPUT
              
              # 获取现有文件的URL
              IPV4_URL="https://raw.githubusercontent.com/rdone4425/yuming-ip/main/ip-lists/${COUNTRY}_ipv4.txt"
              IPV6_URL="https://raw.githubusercontent.com/rdone4425/yuming-ip/main/ip-lists/${COUNTRY}_ipv6.txt"
              
              # 如果回调URL在环境变量中存在，则通知Worker
              if [ ! -z "${{ github.event.client_payload.callback_url }}" ]; then
                echo "通知Worker使用现有URL"
                CALLBACK_URL="${{ github.event.client_payload.callback_url }}?callback=github_action&country=${COUNTRY}&ipv4_url=${IPV4_URL}&ipv6_url=${IPV6_URL}"
                echo "调用回调URL: $CALLBACK_URL"
                RESPONSE=$(curl -X GET "$CALLBACK_URL")
                echo "回调响应: $RESPONSE"
              fi
              
              exit 0
            else
              echo "上次生成时间超过24小时，将重新生成"
            fi
          fi
          
          echo "skip=false" >> $GITHUB_OUTPUT

      - name: Checkout meta-rules-dat repository
        if: steps.check_generated.outputs.skip != 'true'
        uses: actions/checkout@v4
        with:
          repository: rdone4425/meta-rules-dat
          ref: meta
          path: meta-rules-dat

      - name: Set up Python
        if: steps.check_generated.outputs.skip != 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Generate IP Lists
        if: steps.check_generated.outputs.skip != 'true'
        run: |
          python3 << EOF
          import os
          import json
          import re
          import ipaddress

          def is_valid_ip(ip_str):
              try:
                  ip = ipaddress.ip_network(ip_str, strict=False)
                  return True, 'ipv6' if isinstance(ip, ipaddress.IPv6Network) else 'ipv4'
              except ValueError:
                  return False, None

          def process_ip_list(input_file):
              ipv4_list = []
              ipv6_list = []
              
              if not os.path.exists(input_file):
                  return ipv4_list, ipv6_list
                  
              with open(input_file, 'r') as f:
                  for line in f:
                      line = line.strip()
                      if not line or line.startswith('#'):
                          continue
                          
                      # 处理 CIDR 格式
                      if '/' in line:
                          is_valid, ip_type = is_valid_ip(line)
                          if is_valid:
                              if ip_type == 'ipv4':
                                  ipv4_list.append(line)
                              else:
                                  ipv6_list.append(line)
                      else:
                          # 尝试匹配单个 IP 地址
                          ipv4_pattern = r'^(\d{1,3}\.){3}\d{1,3}$'
                          ipv6_pattern = r'^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$'
                          
                          if re.match(ipv4_pattern, line):
                              ipv4_list.append(f"{line}/32")
                          elif re.match(ipv6_pattern, line):
                              ipv6_list.append(f"{line}/128")
              
              return ipv4_list, ipv6_list
          
          # 获取传入的国家代码
          country_code = '${{ github.event.client_payload.country }}'.lower()
          
          # 创建输出目录
          os.makedirs('ip-lists', exist_ok=True)
          
          # 处理 IP 列表
          input_file = f'./meta-rules-dat/geo/geoip/{country_code}.list'
          ipv4_list, ipv6_list = process_ip_list(input_file)
          
          # 处理 IPv6 专用列表
          input_file_v6 = f'./meta-rules-dat/geo/geoip6/{country_code}.list'
          extra_ipv4, extra_ipv6 = process_ip_list(input_file_v6)
          
          # 合并列表并去重
          ipv4_list = sorted(set(ipv4_list + extra_ipv4))
          ipv6_list = sorted(set(ipv6_list + extra_ipv6))
          
          # 保存 IPv4 列表
          if ipv4_list:
              with open(f'ip-lists/{country_code}_ipv4.txt', 'w') as f:
                  f.write('\n'.join(ipv4_list))
          
          # 保存 IPv6 列表
          if ipv6_list:
              with open(f'ip-lists/{country_code}_ipv6.txt', 'w') as f:
                  f.write('\n'.join(ipv6_list))
          
          # 生成元数据
          metadata = {
              "country_code": country_code,
              "has_ipv4": bool(ipv4_list),
              "has_ipv6": bool(ipv6_list),
              "ipv4_count": len(ipv4_list),
              "ipv6_count": len(ipv6_list),
              "generated_at": "${{ github.event.client_payload.timestamp }}"
          }
          
          with open(f'ip-lists/{country_code}_metadata.json', 'w') as f:
              json.dump(metadata, f, indent=2)
          EOF

      - name: Commit and push if changed
        if: steps.check_generated.outputs.skip != 'true'
        id: commit_push
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add ip-lists/
          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Update IP lists for ${{ github.event.client_payload.country }}"
            git push
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Notify Worker
        if: steps.check_generated.outputs.skip != 'true' && steps.commit_push.outputs.changes == 'true'
        run: |
          COUNTRY="${{ github.event.client_payload.country }}"
          # 构建IPv4和IPv6文件的URL
          IPV4_URL="https://raw.githubusercontent.com/rdone4425/yuming-ip/main/ip-lists/${COUNTRY}_ipv4.txt"
          IPV6_URL="https://raw.githubusercontent.com/rdone4425/yuming-ip/main/ip-lists/${COUNTRY}_ipv6.txt"
          
          # 通知Worker
          if [ ! -z "${{ github.event.client_payload.callback_url }}" ]; then
            echo "通知Worker使用新生成的URL"
            CALLBACK_URL="${{ github.event.client_payload.callback_url }}?callback=github_action&country=${COUNTRY}&ipv4_url=${IPV4_URL}&ipv6_url=${IPV6_URL}"
            echo "调用回调URL: $CALLBACK_URL"
            RESPONSE=$(curl -X GET "$CALLBACK_URL")
            echo "回调响应: $RESPONSE"
          fi 
